#AdministrationManager.MaxAdminSockets=20
#AdministrationManager.LoginTimeout=30
#AdministrationManager.keystore=monitoring.keystore
#AdministrationManager.password=MonStorePass
#AdministrationManager.keypassword=MonKeyPass
#AdministrationManager.keystoretype=JKS
AdministrationManager.keystore = E:/Rhapsody/Rhapsody Engine/Certificate/nh.org.au.pfx
AdministrationManager.password = REN60044b265cbe5aa3cf79ec48ac738891dc7043d78ea60fe495db56635b4e2bf6fb6ed0d274689ec6e98b59fa628b1
AdministrationManager.keypassword = REN6009c688394dccd0c4e8e3f0f0aec269e9bc5917c570907d2df8bd11bcc837ca16b91ee87a62004bcacbffeef397b
AdministrationManager.keystoretype = PKCS12

AdministrationManager.AdminPort = 3041
AdministrationManager.BroadcastPort = 4031

InitialisationService.dataDirectory = E:/Rhapsody/data

#BackupService.directory=backup

#CommunicationPointExecutionService.lowDiskSpaceThreshold=2048
#RouteExecutionService.lowDiskSpaceThreshold=2048

#LoggingService.directory=logs

#Repository.directory=config/repository

#ReferenceTrackerService.directory=referencetracker

#RouteExecutionService.numberOfWorkerThreads=10
#RouteExecutionService.maximumDeliveriesPerTransaction=100
#RouteExecutionService.inputCommunicationPointDequeueSize=1

#IdGenerator.directory=idgeneration

#IndexService.directory=index

#MessageService.directory=messagestore
#MessageService.metaStoreDirectory=messagestore/meta
#MessageService.metaStoreRecordSize=512
#MessageService.metaStoreRecordsPerFile=10000
#MessageService.bodyStoreDirectory=messagestore/body
#MessageService.bodyStoreRecordSize=1024
#MessageService.bodyStoreRecordsPerFile=10000

#Secondary body blob store configuration. This message body store keeps bodies for live messages only.
#MessageService.shortTermBodyStoreDirectory=messagestore/shorttermbody
#MessageService.shortTermBodyStoreRecordSize=1024
#MessageService.shortTermBodyStoreRecordsPerFile=10000
#MessageService.forceWrites=true

#MessageEventService.directory=messageevents
#MessageEventService.recordSize=128
#MessageEventService.recordsPerFile=10000
#MessageEventService.forceStores=true

#MessageTable.directory=messagetables

#MessageTrackingService.directory=tracking
#MessageTrackingService.oldTrackingRecentlyCompletedCacheSize=50
#MessageTrackingService.schemeTrackingRecentlyCompletedCacheSize=50
#MessageTrackingService.cacheSize=30
#MessageTrackingService.recordSize=512
#MessageTrackingService.recordsPerFile=10000
#MessageTrackingService.forceStores=true

#MonitoringService.directory=monitoring

#PersistentMapService.directory=persistentmapstore

#QueueService.directory=queue
#QueueService.forceWrites=true
# Limits the number of messages that are examined during scanning of the messages on the input queue.
# Entire live portion of the input queue is scanned one by one if the number of messages in the queue is less than this number.
# If the number of live messages in the queue exceeds this number then filtering based on used queue lives is performed.
#QueueService.input.liveMessageScanningThreshold=50

# This setting is used as a "safe-mode"
# If set to true, no components will start at startup
#StartupService.safeMode=false

#StatisticsService.directory=statistics

# Task scheduler for normal internal services
#TaskSchedulerService.numberOfThreads=10
#TaskSchedulerService.threadPriority=5

# Task scheduler for critical internal services
#TaskSchedulerService.numberOfThreads.critical=5
#TaskSchedulerService.threadPriority.critical=5

#TransactionService.directory=transaction
#TransactionService.log.numberOfTransactionFilesThreshold=100

#UserManagementService.directory=users
#UserManagementService.numberOfOldPasswordsToKeep=10
#UserManagementService.forceStores=true
#UserManagementService.recordsPerFile=10000

WebMonitoringService.http.enabled = false
WebMonitoringService.http.port = 8081
WebMonitoringService.https.enabled = true
WebMonitoringService.https.port = 8444
WebMonitoringService.ssl.keystore = E:/Rhapsody/Rhapsody Engine/Certificate/nh.org.au.pfx
WebMonitoringService.ssl.password = REN60032cc9484726ec3d7902036ccf918816e3d60179345a9305821d3c7056cc540d1a8f230c57c9f6e1ff7083dce84
WebMonitoringService.ssl.keypassword = REN60014632562e8bde15c3747092808b5588d2d1f64582103e99d6ecb1f58bfd223d3c764589a6e692216ee0c43c79f
WebMonitoringService.ssl.keystoretype = PKCS12

#WebMonitoringService.ssl.keystore=monitoring.keystore
#WebMonitoringService.ssl.password=MonStorePass
#WebMonitoringService.ssl.keypassword=MonKeyPass
#WebMonitoringService.ssl.needclientauth=false
#WebMonitoringService.ssl.wantclientauth=false
#WebMonitoringService.ssl.keystoretype=JKS
#WebMonitoringService.ssl.protocol=TLSv1
#WebMonitoringService.ssl.enabledProtocols=TLSv1

# Configure the maximum upload size (in bytes) allowed during a failure before the connection is aborted
#WebMonitoringService.http.maxswallowsize=104857600
#WebMonitoringService.https.maxswallowsize=104857600

# Configure the enable state of the user feedback tool in the web management console
#WebMonitorService.userFeedback.enabled=true
# Configure the URL to send the user feedback to the user feedback server
#WebMonitoringService.userFeedback.url=

# Configure the enable state of the documentation icon in the the web management console
#WebMonitorService.documentationHelp.enabled=true
# Configure the URL to link to the documentation help page
#WebMonitoringService.documentationHelp.url=
# Configure the tooltip text showing on the documentation help icon
#WebMonitoringService.documentationHelp.tooltip=

# Configure the timeout when retrieving external wsdl or schemas
#WebServicesProducerService.wsdl.timeoutInSeconds=10

# Configure the timeout when loading wsdl
#WebServicesConsumerService.wsdl.timeoutInSeconds=60

#WebServiceApi.ssl.keystore=monitoring.keystore
#WebServiceApi.ssl.password=MonStorePass
#WebServiceApi.ssl.keypassword=MonKeyPass
#WebServiceApi.ssl.keystoretype=JKS
# Sets the SSL protocol for the Web Service API
#WebServiceApi.ssl.protocol=TLSv1
# This sets the ciphers suites for the Web Service API, and corresponds
# to the cipher suites listed elsewhere in this properties file.
# It should be set to a value of VERY_STRONG, FIPS or STRONG.
# Note that these values are case-sensitive, so must be written in all capitals.
#WebServiceApi.cipherSuiteStrength=FIPS

# Sets the maximum number of threads in the pool used to service web service requests
#WebServiceFramework.MaxHttpListenerThreads=20
# Sets the maximum number of simultaneous outgoing HTTP connections
#WebServiceFramework.MaxHttpConnections=200
# Sets the maximum number of simultaneous outgoing HTTP connections to the same host/port
#WebServiceFramework.MaxHttpConnectionsPerHost=10

# Sets default option to allow the web service framework to preserve CDATA sections or escape them. If it's not set or sets to false,
# all the literal CDATA sections in either incoming and outgoing XML will be escaped by default for both consumers and producers. 
# If the option sets to true, then the CDATA sections will be preserved.
#WebServicesFramework.CDATA.preserve=false

# Override the default 'Duplicate Message Detection Filter' datastore directory
#duplicate.dir=

# Number of same set of columns lookups triggering index creation
#LookupTableService.autoIndexHitCountThreshold=100
# Maximum backlog size for lookup failures that are waiting to be persisted. After this limit the failures are discarded. 
#LookupTableService.failureRecorderBacklogLimit=10

#CharacterMapService.modificationCheckInterval=60

# Enable overwrite configuration option in IDE during rlc loading
#Rlc.overwriteConfiguration.enabled=true

# Configure the maximum number of login attempts per minute
#UserManagementService.maximumLoginAttemptsPerMinute.ide_view=20
#UserManagementService.maximumLoginAttemptsPerMinute.monitoring_view=20
#UserManagementService.maximumLoginAttemptsPerMinute.rest_api_call=5
#UserManagementService.maximumLoginAttemptsPerMinute.web_services_api_call=200

# Configure the maximum number of requests per minute via the REST API
#RestApi.MaximumRequestsPerMinute=500

# The workspace modification check to use on check in. Uncommenting the following line will speed up
# check in times at the cost of not detecting accidental modifications to the configuration files on disk.
#ConfigurationService.workspaceModificationCheck=NONE

# Limits on the number of simultaneous searches and result sets via the REST API
#RestApi.maximumRunningSearchesForEngine=10
#RestApi.maximumResultSetsForEngine=50
#RestApi.maximumRunningSearchesPerUser=2
#RestApi.maximumResultSetsPerUser=10

# Time to keep a completed search before discarding it if it hasn't been accessed
#RestApi.resultSetTimeoutMinutes=10

# SSL Cipher Suites
# Note that each cipher suite group wraps over multiple lines. All the lines for a particular group
# should be uncommented if it is going to be modified. Wrapping requires that the last character on
# the previous line is a backslash.
#WebMonitoringService.ssl.enabledCiphers=SSL_ECDHE_RSA_WITH_AES_256_CBC_SHA384 TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 \
#	SSL_ECDHE_RSA_WITH_AES_256_CBC_SHA TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA SSL_RSA_WITH_AES_256_CBC_SHA256 \
#	TLS_RSA_WITH_AES_256_CBC_SHA256 SSL_RSA_WITH_AES_256_CBC_SHA TLS_RSA_WITH_AES_256_CBC_SHA \
#	SSL_ECDHE_RSA_WITH_AES_128_CBC_SHA256 TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 SSL_ECDHE_RSA_WITH_AES_128_CBC_SHA \
#	TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA SSL_RSA_WITH_AES_128_CBC_SHA256 TLS_RSA_WITH_AES_128_CBC_SHA256 \
#	SSL_RSA_WITH_AES_128_CBC_SHA TLS_RSA_WITH_AES_128_CBC_SHA
#SslProvider.CipherSuites.VeryStrong=SSL_ECDHE_RSA_WITH_AES_256_CBC_SHA384 TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 \
#	SSL_ECDHE_RSA_WITH_AES_256_CBC_SHA TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA SSL_RSA_WITH_AES_256_CBC_SHA256 \
#	TLS_RSA_WITH_AES_256_CBC_SHA256 SSL_RSA_WITH_AES_256_CBC_SHA TLS_RSA_WITH_AES_256_CBC_SHA \
#SslProvider.CipherSuites.Fips=SSL_ECDHE_RSA_WITH_AES_256_CBC_SHA384 TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 \
#	SSL_ECDHE_RSA_WITH_AES_256_CBC_SHA TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA SSL_RSA_WITH_AES_256_CBC_SHA256 \
#	TLS_RSA_WITH_AES_256_CBC_SHA256 SSL_RSA_WITH_AES_256_CBC_SHA TLS_RSA_WITH_AES_256_CBC_SHA \
#	SSL_ECDHE_RSA_WITH_AES_128_CBC_SHA256 TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 SSL_ECDHE_RSA_WITH_AES_128_CBC_SHA \
#	TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA SSL_RSA_WITH_AES_128_CBC_SHA256 TLS_RSA_WITH_AES_128_CBC_SHA256 \
#	SSL_RSA_WITH_AES_128_CBC_SHA TLS_RSA_WITH_AES_128_CBC_SHA
#SslProvider.CipherSuites.Strong=SSL_ECDHE_RSA_WITH_AES_256_CBC_SHA384 TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 \
#	SSL_ECDHE_RSA_WITH_AES_256_CBC_SHA TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA SSL_RSA_WITH_AES_256_CBC_SHA256 \
#	TLS_RSA_WITH_AES_256_CBC_SHA256 SSL_RSA_WITH_AES_256_CBC_SHA TLS_RSA_WITH_AES_256_CBC_SHA \
#	SSL_ECDHE_RSA_WITH_AES_128_CBC_SHA256 TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 SSL_ECDHE_RSA_WITH_AES_128_CBC_SHA \
#	TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA SSL_RSA_WITH_AES_128_CBC_SHA256 TLS_RSA_WITH_AES_128_CBC_SHA256 \
#	SSL_RSA_WITH_AES_128_CBC_SHA TLS_RSA_WITH_AES_128_CBC_SHA
#SslProvider.CipherSuites.Strong.Anonymous=TLS_DH_anon_WITH_AES_256_CBC_SHA256 SSL_DH_anon_WITH_AES_256_CBC_SHA256 \
#	TLS_DH_anon_WITH_AES_256_CBC_SHA SSL_DH_anon_WITH_AES_256_CBC_SHA TLS_DH_anon_WITH_AES_128_CBC_SHA256 \
#	SSL_DH_anon_WITH_AES_128_CBC_SHA256 TLS_DH_anon_WITH_AES_128_CBC_SHA SSL_DH_anon_WITH_AES_128_CBC_SHA
#SslProvider.CipherSuites.Weak=SSL_ECDHE_RSA_WITH_AES_256_CBC_SHA384 TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 \
#	SSL_ECDHE_RSA_WITH_AES_256_CBC_SHA TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA SSL_RSA_WITH_AES_256_CBC_SHA256 \
#	TLS_RSA_WITH_AES_256_CBC_SHA256 SSL_RSA_WITH_AES_256_CBC_SHA TLS_RSA_WITH_AES_256_CBC_SHA \
#	SSL_ECDHE_RSA_WITH_AES_128_CBC_SHA256 TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 SSL_ECDHE_RSA_WITH_AES_128_CBC_SHA \
#	TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA SSL_RSA_WITH_AES_128_CBC_SHA256 TLS_RSA_WITH_AES_128_CBC_SHA256 \
#	SSL_RSA_WITH_AES_128_CBC_SHA TLS_RSA_WITH_AES_128_CBC_SHA SSL_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA \
#	TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA SSL_RSA_WITH_3DES_EDE_CBC_SHA SSL_ECDHE_RSA_WITH_RC4_128_SHA \
#	TLS_ECDHE_RSA_WITH_RC4_128_SHA SSL_RSA_WITH_RC4_128_SHA SSL_RSA_WITH_DES_CBC_SHA \
#	SSL_RSA_EXPORT_WITH_DES40_CBC_SHA SSL_RSA_EXPORT_WITH_RC4_40_MD5 SSL_RSA_WITH_RC4_128_MD5
#SslProvider.CipherSuites.Weak.Anonymous=TLS_DH_anon_WITH_AES_256_CBC_SHA256 SSL_DH_anon_WITH_AES_256_CBC_SHA256 \
#	TLS_DH_anon_WITH_AES_256_CBC_SHA SSL_DH_anon_WITH_AES_256_CBC_SHA TLS_DH_anon_WITH_AES_128_CBC_SHA256 \
#	SSL_DH_anon_WITH_AES_128_CBC_SHA256 TLS_DH_anon_WITH_AES_128_CBC_SHA SSL_DH_anon_WITH_AES_128_CBC_SHA \
#	TLS_DH_anon_WITH_3DES_EDE_CBC_SHA SSL_DH_anon_WITH_3DES_EDE_CBC_SHA SSL_DH_anon_WITH_RC4_128_MD5 \
#	SSL_DH_anon_WITH_DES_CBC_SHA SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA SSL_DH_anon_EXPORT_WITH_RC4_40_MD5

# Uncomment to enable certificate revocation checks
#SslProvider.revocationChecks.enable=true

# Maximum number of dynamic files that are cached by all the running directory communication points
#StandardModuleService.DirectoryCommunicationPoint.GlobalCacheSize=10000

# Time limit for a running transaction before it is coalesced into a new record
#TransactionService.coalesceTimeMins=60

# Determines whether newly created Rhapsody backups are zipped or directories
#BackupService.zipRhapsodyBackups=true

# Timeout value in milliseconds for native file read and write operations
#FileService.IOThresholdForWarningInMillis=27000

# SSH Cipher Suites
# Note that each cipher suite group wraps over multiple lines. All the lines for a particular group
# should be uncommented if it is going to be modified. Wrapping requires that the last character on
# the previous line is a backslash.
#SshService.Ciphers.VeryStrong=AES_256_CBC
#SshService.KeyExchange.VeryStrong=DH_GROUP_EXCHANGE_SHA256 DH_GROUP_14_EXCHANGE DH_GROUP_EXCHANGE
#SshService.KeyGeneration.VeryStrong=DSA RSA
#SshService.MessageAuthentication.VeryStrong=HMAC_SHA1 HMAC_SHA2_256 HMAC_SHA2_512
#
#SshService.Ciphers.Fips=AES_256_CBC AES_192_CBC AES_128_CBC
#SshService.KeyExchange.Fips=DH_GROUP_EXCHANGE_SHA256 DH_GROUP_14_EXCHANGE DH_GROUP_EXCHANGE 
#SshService.KeyGeneration.Fips=DSA RSA
#SshService.MessageAuthentication.Fips=HMAC_SHA1 HMAC_SHA2_256 HMAC_SHA2_512
#
#SshService.Ciphers.Strong=AES_256_CBC AES_256_CTR AES_192_CBC AES_192_CTR AES_128_CBC AES_128_CTR \
#	BLOWFISH_128_CBC
#SshService.KeyExchange.Strong=DH_GROUP_EXCHANGE_SHA256 DH_GROUP_14_EXCHANGE DH_GROUP_EXCHANGE DH_GROUP_1_EXCHANGE
#SshService.KeyGeneration.Strong=DSA RSA
#SshService.MessageAuthentication.Strong=HMAC_SHA1 HMAC_SHA2_256 HMAC_SHA2_512 HMAC_SHA1_96
#
#SshService.Ciphers.Weak=AES_256_CBC AES_256_CTR AES_192_CBC AES_192_CTR AES_128_CBC AES_128_CTR \
#	DES_168_CBC3 BLOWFISH_128_CBC RC4_128
#SshService.KeyExchange.Weak=DH_GROUP_EXCHANGE_SHA256 DH_GROUP_14_EXCHANGE DH_GROUP_EXCHANGE DH_GROUP_1_EXCHANGE
#SshService.KeyGeneration.Weak=DSA RSA
#SshService.MessageAuthentication.Weak=HMAC_SHA1 HMAC_SHA2_256 HMAC_SHA2_512 HMAC_SHA1_96 HMAC_MD5 HMAC_MD5_96

# Maximum number of times that an input message and its descendants can flow through a Router communication point
#RouterModuleService.maxRouterSendsPerMessage=50

# Indicates whether the engine is allow uploads of custom modules and libraries from the IDE. This can be set to one
# of: AllowModuleUploads, OnlyAllowNewModuleUploads, or DisallowModuleUploads.
#ModuleService.customModuleUploadMode=AllowModuleUploads

# Indicates whether the (S)FTP Client communication point is allowed to add SSL certificates and SSH public keys to the
# Rhapsody certificate manager when it sees an FTPS/SFTP server for the first time. Once enabled here the option
# becomes available on each instance of the (S)FTP Client communication point. The available settings are: enabled
# or disabled.
#FileTransferModule.allowAutoAddingCertificatesAndKeys=disabled

# Allows large responses sent to the IDE to be gzipped to reduce the transmission size.
#AdministrationManager.gzipLargeResponses=true

# Minimum amount of available disk space in MB required to perform a commit, minimum value 25MB
#ConfigurationService.minimumDiskSpaceThreshold=100

# Text file extensions for component text view.
# Note that text file extension wrap over multiple lines. All the lines should be uncommented if it is going to be modified.
# Wrapping requires that the last character on the previous line is a backslash.
#ConfigurationService.file.extensions.text=edi,txt,css,htm, html, htlp, shtm, shtml, wml, xhtml \
#	options, properties, prefs, java, js, json, jsp, jsf, jspf, jspx, jsv, jtpl, tag, tagf, tagx, tagxf \
#	confluence, mediawiki, textile, tracwiki, twiki, dtd, ent, mod, log, ftl

# XML file extensions for component text view.
# Note that text file extension wrap over multiple lines. All the lines should be uncommented if it is going to be modified.
# Wrapping requires that the last character on the previous line is a backslash.
#ConfigurationService.file.extensions.xml=xml, xsd, exsd, xsl, xslt, classpath, component, jsdtscope, project, wtpmodules, wsimsg, xjb \
#	ant, ent, macrodef, wsdd, dita, ditamap, dbk, e4xmi, product, tld, target, wsil, wsdl, xmi \
#	ecore, ecore2ecore, ecore2xml, genmodel, emof

# Timed out period of concurrency based filters, minimum value 1 second, maximum value 86400 seconds (24 hours)
#ModelService.concurrencyFilterTimeoutSeconds=30

# Generate System State output directory. The path given is relative to the Rhapsody install directory, unless an absolute path is given.
GenerateSystemState.outputDirectory = generateSystemStateOutput

# Sets default option to use user-defined column types all the time or not for all database components. If it's not set or sets to false,
# user-defined column types are applied only when passing parameter values are null by default. If the option sets to true, the user-defined
# column types are used all the time by default.
#DatabaseModule.alwaysUseColumnType=false

# The time in minutes a REST Client can be idle before the cached connection information is cleared
#RestClients.ConnectionIdleTimeoutMinutes=240

# The maximum interpreter stack depth for Rhino engine
#JavaScriptService.maximumInterpreterStackDepth=512

# The maximum cache size for shared JavaScript library per thread, each route execution thread may have up to defined maximum
# number of shared JavaScript libraries cached in memory.
#JavaScriptService.sharedJSLibraryCacheSize=10

# Java DNS caching is disabled by default by can be overridden using these settings
#networkaddress.cache.ttl=0
#networkaddress.cache.negative.ttl=0

# Enable the treeview for HL7 messages in the Management Console
#WebMonitoringService.messageTreeView.enabled=true
# Maximum size in kilobytes for messages to display in the treeview
#WebMonitoringService.messageTreeView.maxMessageSizeKilobytes=32
# Maximum thread pool size for parsing messages for the treeview
#WebMonitoringService.messageTreeView.maxParserThreadPoolSize=2
# Maximum number of queued messages for parsing in the treeview before new requests are rejected
#WebMonitoringService.messageTreeView.maxPendingQueueSize=20
# Priority for the threads that parse messages for the treeview
#WebMonitoringService.messageTreeView.parserThreadPriority=1
# Maximum size of the completed set of parsed messages for the treeview before the oldest results are discarded
#WebMonitoringService.messageTreeView.maxCompletedSetSize=50

# Enable the simplified error details to be shown by default when viewing a message error
#WebMonitoringService.showSimplifiedErrorByDefault=false

# Priority for the thread that runs the message defrag
#CleanupService.messageDefrag.threadPriority=1
# Minimum disk space available to allow defrag
#CleanupService.messageDefrag.minimumSpaceMegabytes=2048

# Maximum number of allowed keys for Rhapsody transient state (min=0, max=10000). Transient state is disabled entirely if this is set to zero.
#TransientStateService.maximumStateKeys=100
# Maximum value size in characters for each transient state value (min=100, max=10000)
#TransientStateService.maximumStateValueSize=1000
# Limit use of transient state to just the comma separated list of keys below (if not set then the keys do not need to be pre-defined)
#TransientStateService.allowedStateKeys= 

# Maximum number of allowed Intelligent Mapper Analysis projects to be run concurrently. 0 disables analysis. Values above 50 are defaulted to 50.
#IntelligentMapperService.NumOfConcurrentAnalysis=5
# Maximum number of allowed messages per Intelligent Mapper Analysis.
#IntelligentMapperService.MaxNumberOfMessagesPerAnalysis=2000
# Maximum message size in kB per message in an Intelligent Mapper Analysis.
#IntelligentMapperService.MaxMessageSizeDuringAnalysis=50
WebServiceApi.httpsPort = 8449
